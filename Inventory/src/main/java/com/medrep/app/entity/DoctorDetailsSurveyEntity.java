package com.medrep.app.entity;
// Generated Aug 2, 2015 5:40:52 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TDoctorSurvey generated by hbm2java
 */
@Entity
@Table(name = "T_DOCTOR_SURVEY", uniqueConstraints = { @UniqueConstraint(columnNames = "DOCTOR_ID"),
		@UniqueConstraint(columnNames = "SURVEY_ID") })
public class DoctorDetailsSurveyEntity implements java.io.Serializable {

	private int doctorSurveyId;
	private String status;
	private Date createdOn;
	private Date updatedOn;
	private String createdBy;
	private String updatedBy;
	private String  refId;
	private DoctorEntity doctor;
	
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_ON",length = 19)
	public Date getUpdatedOn() {
		return updatedOn;
	}
	
	@Column(name = "REF_ID")
	public String getRefId() {
		return refId;
	}

	public void setRefId(String refId) {
		this.refId = refId;
	}


	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "CREATED_BY", nullable = false)
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "UPDATED_BY", nullable = false)
	public String getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	

	

	public DoctorDetailsSurveyEntity() {
	}

	public DoctorDetailsSurveyEntity(int doctorSurveyId) {
		this.doctorSurveyId = doctorSurveyId;
	}

	public DoctorDetailsSurveyEntity(int doctorSurveyId, String status, Date createdOn) {
		this.doctorSurveyId = doctorSurveyId;
		this.status = status;
		this.createdOn = createdOn;
	}

	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "DOCTOR_SURVEY_ID", nullable = false)
	public int getDoctorSurveyId() {
		return this.doctorSurveyId;
	}

	public void setDoctorSurveyId(int doctorSurveyId) {
		this.doctorSurveyId = doctorSurveyId;
	}

	


	@Column(name = "STATUS")
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_ON",length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}
	
	/*@OneToOne(cascade=CascadeType.ALL,fetch=FetchType.LAZY)
    @JoinColumn(name="SURVEY_ID",nullable=false,unique=false)
	public SurveyEntity getSurvey() {
		return survey;
	}

	public void setSurvey(SurveyEntity survey) {
		this.survey = survey;
	}*/
	
	@OneToOne(cascade=CascadeType.ALL,fetch=FetchType.LAZY)
    @JoinColumn(name="DOCTOR_ID",nullable=false,unique=false)
	public DoctorEntity getDoctor() {
		return doctor;
	}
	public void setDoctor(DoctorEntity doctor) {
		this.doctor = doctor;
	}

	
	
}
