package com.medrep.app.entity;
// Generated Aug 2, 2015 5:40:52 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TNotification generated by hbm2java
 */
@Entity
@Table(name = "T_NOTIFICATION", uniqueConstraints = @UniqueConstraint(columnNames = "TYPE_ID") )
public class NotificationEntity implements java.io.Serializable {

	private Integer notificationId;
	private String notificationName;
	private String notificationDesc;
	private Integer typeId;
	private Integer therapeuticId;
	private Integer companyId;
	private Date updatedOn;
	private Integer updatedBy;
	private Date createdOn;
	private Integer createdBy;
	private Date validUpto;
	private String status;
	private String externalRef;
	private String pushNotification;
	List<NotificationDetailsEntity> notificationDetailEntities;
	List<PharmaRepNotificationEntity> notificationPharmaEntities;
	List<DoctorNotificationEntity> notificationDoctorEntities;
	private Integer viewCount;


	@OneToMany(mappedBy="notificationEntity", cascade=CascadeType.ALL, fetch=FetchType.LAZY)
	public List<NotificationDetailsEntity> getNotificationDetailEntities() {
		return notificationDetailEntities;
	}

	public void setNotificationDetailEntities(List<NotificationDetailsEntity> notificationDetailEntities) {
		this.notificationDetailEntities = notificationDetailEntities;
	}
	
	@OneToMany(mappedBy="notificationEntity", cascade=CascadeType.REMOVE, fetch=FetchType.LAZY)
	public List<PharmaRepNotificationEntity> getNotificationPharmaEntities() {
		return notificationPharmaEntities;
	}

	public void setNotificationPharmaEntities(
			List<PharmaRepNotificationEntity> notificationPharmaEntities) {
		this.notificationPharmaEntities = notificationPharmaEntities;
	}
	
	@OneToMany(mappedBy="notificationEntity", cascade=CascadeType.REMOVE, fetch=FetchType.LAZY)
	public List<DoctorNotificationEntity> getNotificationDoctorEntities() {
		return notificationDoctorEntities;
	}

	public void setNotificationDoctorEntities(
			List<DoctorNotificationEntity> notificationDoctorEntities) {
		this.notificationDoctorEntities = notificationDoctorEntities;
	}

	public NotificationEntity() {
	}

	public NotificationEntity(String notificationDesc, Integer typeId, Integer therapeuticId, Integer companyId,
			Date updatedOn, Integer updatedBy, Date createdOn, Integer createdBy, Date validUpto, String status,
			String externalRef) {
		this.notificationDesc = notificationDesc;
		this.typeId = typeId;
		this.therapeuticId = therapeuticId;
		this.companyId = companyId;
		this.updatedOn = updatedOn;
		this.updatedBy = updatedBy;
		this.createdOn = createdOn;
		this.createdBy = createdBy;
		this.validUpto = validUpto;
		this.status = status;
		this.externalRef = externalRef;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "NOTIFICATION_ID", nullable = false)
	public Integer getNotificationId() {
		return this.notificationId;
	}

	public void setNotificationId(Integer notificationId) {
		this.notificationId = notificationId;
	}

	@Column(name = "NOTIFICATION_DESC")
	public String getNotificationDesc() {
		return this.notificationDesc;
	}

	public void setNotificationDesc(String notificationDesc) {
		this.notificationDesc = notificationDesc;
	}

	@Column(name = "TYPE_ID", unique = true)
	public Integer getTypeId() {
		return this.typeId;
	}

	public void setTypeId(Integer typeId) {
		this.typeId = typeId;
	}

	@Column(name = "THERAPEUTIC_ID")
	public Integer getTherapeuticId() {
		return this.therapeuticId;
	}

	public void setTherapeuticId(Integer therapeuticId) {
		this.therapeuticId = therapeuticId;
	}

	@Column(name = "COMPANY_ID")
	public Integer getCompanyId() {
		return this.companyId;
	}

	public void setCompanyId(Integer companyId) {
		this.companyId = companyId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_ON", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "UPDATED_BY")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_ON", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "CREATED_BY")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "VALID_UPTO", length = 19)
	public Date getValidUpto() {
		return this.validUpto;
	}

	public void setValidUpto(Date validUpto) {
		this.validUpto = validUpto;
	}

	@Column(name = "STATUS")
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "EXTERNAL_REF")
	public String getExternalRef() {
		return this.externalRef;
	}

	public void setExternalRef(String externalRef) {
		this.externalRef = externalRef;
	}

	@Column(name = "NOTIFICATION_TITLE")
	public String getNotificationName() {
		return notificationName;
	}

	public void setNotificationName(String notificationName) {
		this.notificationName = notificationName;
	}

	@Column(name = "PUSH_STATUS")
	public String getPushNotification() {
		return pushNotification;
	}

	public void setPushNotification(String pushNotification) {
		this.pushNotification = pushNotification;
	}

	@Column(name="VIEW_COUNT")
	public Integer getViewCount() {
		return viewCount;
	}

	public void setViewCount(Integer viewCount) {
		this.viewCount = viewCount;
	}

}