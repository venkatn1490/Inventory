package com.medrep.app.entity;
// Generated Aug 2, 2015 5:40:52 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * TDoctor generated by hbm2java
 */
@Entity
@Table(name = "P_PATIENT", uniqueConstraints = {@UniqueConstraint(columnNames = "USER_ID"),@UniqueConstraint(columnNames = "CONTACT_ID"), @UniqueConstraint(columnNames = "PATIENT_ID") })
public class PatientEntity implements java.io.Serializable {

	private Integer patientId;
	private UserEntity user;
	
	private PatientContactEntity patientContactEntity;
	private Date dateofBirth;
	private String sex;
	
	private String address1;
	private String address2;
	private String city;
	private String state;
	private String zip;
	private String height;
    private String weight;
    private String marriedstatus;
	private String bloodGroup;
	private String aadharCardNumber;
    	
	
	public PatientEntity() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "PATIENT_ID", nullable = false)
	public Integer getPatientId() {
		return this.patientId;
	}

	public void setPatientId(Integer patientId) {
		this.patientId = patientId;
	}
	
	
	@Column(name = "DATE_OF_BIRTH")
	public Date getDateofBirth() {
		return dateofBirth;
	}
	public void setDateofBirth(Date dateofBirth) {
		this.dateofBirth = dateofBirth;
	}
	@Column(name = "SEX")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	@Column(name = "AADHAR_CARD_NO")
	public String getAadharCardNumber() {
		return aadharCardNumber;
	}

	public void setAadharCardNumber(String aadharCardNumber) {
		this.aadharCardNumber = aadharCardNumber;
	}
	
	@OneToOne(cascade=CascadeType.ALL,fetch=FetchType.LAZY)
    @JoinColumn(name="CONTACT_ID",nullable=false,unique=true)
	public PatientContactEntity getPatientContactEntity() {
		return patientContactEntity;
	}

	public void setPatientContactEntity(PatientContactEntity patientContactEntity) {
		this.patientContactEntity = patientContactEntity;
	}

	
	@Column(name = "ADDRESS_1")
	public String getAddress1() {
		return address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}
	@Column(name = "ADDRESS_2")
	public String getAddress2() {
		return address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}
	@Column(name = "CITY")
	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}
	@Column(name = "STATE")
	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}
	@Column(name = "ZIP")
	public String getZip() {
		return zip;
	}

	public void setZip(String zip) {
		this.zip = zip;
	}
	@Column(name = "Height")
	public String getHeight() {
		return height;
	}

	public void setHeight(String height) {
		this.height = height;
	}
	@Column(name = "Weight")
	public String getWeight() {
		return weight;
	}

	public void setWeight(String weight) {
		this.weight = weight;
	}
	@Column(name = "MARRIED")
	public String getMarriedstatus() {
		return marriedstatus;
	}

	public void setMarriedstatus(String marriedstatus) {
		this.marriedstatus = marriedstatus;
	}
	@Column(name = "BLOOD_GROUP")
	public String getBloodGroup() {
		return bloodGroup;
	}

	public void setBloodGroup(String bloodGroup) {
		this.bloodGroup = bloodGroup;
	}

	@OneToOne(cascade=CascadeType.ALL,fetch=FetchType.LAZY)
    @JoinColumn(name="USER_ID",nullable=false,unique=true)
	public UserEntity getUser() {
		return this.user;
	}

	public void setUser(UserEntity user) {
		this.user = user;
	}
}
