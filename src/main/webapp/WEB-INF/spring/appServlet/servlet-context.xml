<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"

	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	
	<annotation-driven/>
	<context:component-scan base-package="com.venkat.app.controller" />
	
	<beans:bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" cache-period="31556926"></resources>
	<resources mapping="/static/**" location="file:/home/venkat/data/static/"/>



    <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver" >
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</beans:bean>

	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
			<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

   <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- below properties can be configured as per your need -->
        <beans:property name="maxUploadSize" value="20971520" /> <!-- 20 MB -->
        <beans:property name="maxInMemorySize" value="1048576" /> <!-- 1 MB -->
  </beans:bean>

   <!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
    </beans:bean>
    
    <beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <beans:property name="location">
	       <beans:value>/WEB-INF/spring/ReportViews.xml</beans:value>
	    </beans:property>
	    <beans:property name="order" value="0" />
	</beans:bean>

	<!-- <beans:import resource="spring-security.xml"/> -->
</beans:beans>
